#!/bin/bash
#
# Script to run watcher in daemon mode at boot time.
#
# Check http://www.gaztronics.net/ for the
# most up-to-date version of this script.
#
# This script is realeased under the terms of the GPL.
# You can source a copy at:
# http://www.fsf.org/copyleft/copyleft.html
#
# Please feel free to modify the script to suite your own needs.
# I always welcome email feedback with suggestions for improvements.
# Please do not email for general support. I do not have time to answer
# personal help requests.

# Author: Gary Myers MIET MBCS CITP
# Revision 1.0  -  4th March 2005

#====================================================================
# Run level information:
#
# chkconfig: 2345 99 99
# description: Secure Tunnel
# processname: watcher
#
# Run "/sbin/chkconfig --add watcher" to add the Run levels.
# This will setup the symlinks and set the process to run at boot.
#====================================================================

#====================================================================
# Paths and variables and system checks.
export HOME=/root

# Source function library (It's a Red Hat thing!)
. /etc/rc.d/init.d/functions

# Check that networking is up.
#
[ ${NETWORKING} ="yes" ] || exit 0

# Path to the executable.
#
SEXE=<%= @binary %>

# Path to the configuration file.
#
CONF=$HOME/.watcher/jobs.yml

# Check the configuration file exists.
#
if [ ! -f $CONF ] ; then
	echo "The configuration file cannot be found!"
exit 0
fi

# Path to the lock file.
#
LOCK_FILE=$HOME/.watcher/watcher.pid

#====================================================================

#====================================================================
# Run controls:

prog=$"watcher"

RETVAL=0

# Start watcher as daemon.
#
start() {
	if [ -f $LOCK_FILE ]; then
	  echo "watcher is already running!"
	  exit 0
	else
	  echo -n $"Starting $prog: "
	  $SEXE start
	fi

	RETVAL=$?
	[ $RETVAL -eq 0 ] && success 
	echo
	[ $RETVAL -eq 0 ] && touch $LOCK_FILE
	return $RETVAL
}


# Stop watcher.
#
stop() {
	if [ ! -f $LOCK_FILE ]; then
	  echo "watcher is not running!"
	  exit 0

	else

	  echo -n $"Shutting down $prog: "
	  $SEXE stop
	  RETVAL=$?
	  [ $RETVAL -eq 0 ]
	   rm -f $LOCK_FILE
	  echo
	  return $RETVAL

	fi
}

# See how we were called.
case "$1" in
   start)
	start
	;;
   stop)
	stop
	;;
   restart)
	stop
	start
	;;
   condrestart)
	if [ -f $LOCK_FILE ]; then
	   stop
	   start
	   RETVAL=$?
	fi
	;;
   status)
	status watcher
	RETVAL=$?
	;;
   *)
    echo $"Usage: $0 {start|stop|restart|condrestart|status}"
    RETVAL=1
esac

exit $RETVAL

